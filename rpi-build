#!/usr/bin/env ruby

#
# Copyright (C) 2014 Noralf Tronnes
#
# MIT License
#

ENV["RPI_BUILD_DIR"] ||= File.expand_path '~/rpi-build'
ENV["RPI_BUILD_REPO"] ||= 'https://github.com/notro/rpi-build'
ENV["RPI_BUILD_STDLIB_REPO"] ||= 'https://github.com/notro/rpi-build-stdlib'

fn = File.join ENV["RPI_BUILD_DIR"], "bin/build"
unless File.exists? fn
  # check dependencies
  missing = []
  apt = []
  begin
    `git --version`
  rescue
    missing << '- git'
    apt << 'git'
  end
  
  begin
    begin
      require 'rubygems'
      gem 'rake'
    rescue LoadError
    end
    require 'rake'
  rescue LoadError
    missing << '- rake'
    apt << 'rake'
  end
  
  begin
    `gcc --version`
    `make --version`
  rescue
    missing << '- gcc/make'
    apt << 'build-essential'
  end
  
  begin
    `bc --version`
  rescue
    missing << '- bc'
    apt << 'bc'
  end

  if !File.exists? '/usr/include/curses.h'
    missing << '- ncurses library (used by make menuconfig)'
    apt << 'libncurses5-dev'
  end

  begin
    `sshpass -V`
  rescue
    missing << '- sshpass'
    apt << 'sshpass'
  end

  unless missing.empty?
    puts "\nMissing dependencies:"
    puts missing.join "\n"
    puts
    cmd = "sudo apt-get --yes install #{apt.join ' '}"
    puts cmd
    print "Install dependencies? [Y/n] "
    STDOUT.flush
    answer = $stdin.gets.chomp
    if ['', 'y', 'yes'].include? answer.downcase
      ok = system cmd
      exit $?.to_i unless ok
    else
      exit 1
    end
  end

  puts "\nInstalling rpi-build to #{ENV["RPI_BUILD_DIR"]}:"
  `mkdir -p #{ENV["RPI_BUILD_DIR"]}`
  puts "\nrpi-build"
  `cd #{ENV["RPI_BUILD_DIR"]} && git clone #{ENV["RPI_BUILD_REPO"]} bin`
  puts "\nstdlib"
  `cd #{ENV["RPI_BUILD_DIR"]} && git clone #{ENV["RPI_BUILD_STDLIB_REPO"]} stdlib`
  puts "\nDone.\n\n"
end

exec fn, *ARGV
